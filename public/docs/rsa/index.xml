<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RSA on CryptoLearn</title>
    <link>https://victim1307.github.io/cryptolearn/docs/rsa/</link>
    <description>Recent content in RSA on CryptoLearn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Dec 2023 16:49:08 +0530</lastBuildDate>
    <atom:link href="https://victim1307.github.io/cryptolearn/docs/rsa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wiener Attack</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/wiener_attack/</link>
      <pubDate>Sat, 02 Dec 2023 16:53:38 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/wiener_attack/</guid>
      <description>The Wiener attack is a method for attacking RSA encryption when the private exponent (d) is small relative to the modulus (n). This method is named after mathematician David Wiener, who first described it in a 1990 paper.&#xA;The Wiener attack takes advantage of the fact that the private exponent (d) is typically much smaller than the modulus (n) in RSA encryption. If the private exponent (d) is small enough, it is possible to calculate the private key using the relationship between the private exponent (d) and the public exponent (e) in RSA.</description>
    </item>
    <item>
      <title>Stereotyped Message</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/stereotyped_message/</link>
      <pubDate>Sat, 02 Dec 2023 16:53:29 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/stereotyped_message/</guid>
      <description></description>
    </item>
    <item>
      <title>Related Message</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/related_message/</link>
      <pubDate>Sat, 02 Dec 2023 16:53:20 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/related_message/</guid>
      <description></description>
    </item>
    <item>
      <title>Partial Key Exposure</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/partial_key_exposure/</link>
      <pubDate>Sat, 02 Dec 2023 16:53:11 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/partial_key_exposure/</guid>
      <description></description>
    </item>
    <item>
      <title>Non Co-prime Exponent</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/non_coprime_exponent/</link>
      <pubDate>Sat, 02 Dec 2023 16:53:03 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/non_coprime_exponent/</guid>
      <description></description>
    </item>
    <item>
      <title>Nitaj CRT RSA</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/nitaj_crt_rsa/</link>
      <pubDate>Sat, 02 Dec 2023 16:52:53 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/nitaj_crt_rsa/</guid>
      <description></description>
    </item>
    <item>
      <title>Manger</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/manger/</link>
      <pubDate>Sat, 02 Dec 2023 16:52:46 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/manger/</guid>
      <description></description>
    </item>
    <item>
      <title>LSB Oracle</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/lsb_oracle/</link>
      <pubDate>Sat, 02 Dec 2023 16:52:38 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/lsb_oracle/</guid>
      <description></description>
    </item>
    <item>
      <title>Low Exponent</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/low_exponent/</link>
      <pubDate>Sat, 02 Dec 2023 16:52:29 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/low_exponent/</guid>
      <description></description>
    </item>
    <item>
      <title>Known D</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/known_d/</link>
      <pubDate>Sat, 02 Dec 2023 16:52:21 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/known_d/</guid>
      <description></description>
    </item>
    <item>
      <title>Known CRT Exponents</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/known_crt_exponents/</link>
      <pubDate>Sat, 02 Dec 2023 16:52:06 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/known_crt_exponents/</guid>
      <description></description>
    </item>
    <item>
      <title>Hastad Attack</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/hastad_attack/</link>
      <pubDate>Sat, 02 Dec 2023 16:51:57 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/hastad_attack/</guid>
      <description></description>
    </item>
    <item>
      <title>Extended Wiener Attack</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/extended_wiener_attack/</link>
      <pubDate>Sat, 02 Dec 2023 16:51:38 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/extended_wiener_attack/</guid>
      <description></description>
    </item>
    <item>
      <title>Desmedt Odlyzko</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/desmedt_odlyzko/</link>
      <pubDate>Sat, 02 Dec 2023 16:50:57 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/desmedt_odlyzko/</guid>
      <description>In Desmedt and Odlyzko&amp;rsquo;s attack, which is a type of existential forgery, the forger requests signatures on messages of their choosing from the legitimate owner of the private key d. After obtaining these signatures, the forger can then compute a signature on a new, arbitrary message that was never actually signed by the real owner of d. This allows the forger to produce a valid signature on any message, even a meaningless one.</description>
    </item>
    <item>
      <title>D Fault Attack</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/d_fault_attack/</link>
      <pubDate>Sat, 02 Dec 2023 16:50:45 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/d_fault_attack/</guid>
      <description></description>
    </item>
    <item>
      <title>CRT Fault Attack</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/crt_fault_attack/</link>
      <pubDate>Sat, 02 Dec 2023 16:50:29 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/crt_fault_attack/</guid>
      <description></description>
    </item>
    <item>
      <title>Common Modulus Attack</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/common_modulus/</link>
      <pubDate>Sat, 02 Dec 2023 16:50:15 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/common_modulus/</guid>
      <description>A common modulus attack on RSA is a type of cryptographic attack that takes advantage of the properties of RSA encryption when the same modulus is used for multiple encryptions.&#xA;In RSA, encryption is performed by raising the plaintext message to the power of the public exponent (e) and taking the remainder when divided by the modulus (n). Similarly, decryption is performed by raising the ciphertext to the power of the private exponent (d) and taking the remainder when divided by the modulus (n).</description>
    </item>
    <item>
      <title>Cherkaoui Semmouni</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/cherkaoui_semmouni/</link>
      <pubDate>Sat, 02 Dec 2023 16:49:59 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/cherkaoui_semmouni/</guid>
      <description>Previous Next &amp;nbsp; &amp;nbsp; / [pdf] View the PDF file here. Implementation link info Parameters Required: link N: the modulus e: the exponent beta: the parameter beta such that |p - q| &amp;lt;= N^beta delta: the parameter delta such that d &amp;lt;= N^delta m: the m value to use for the small roots method (default: 1) t: the t value to use for the small roots method (default: automatically computed using m) check_bounds: perform bounds check (default: True) Return: a tuple containing the prime factors and the private exponent, or None if the factors could not be found</description>
    </item>
    <item>
      <title>Boneh Durfee</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/boneh_durfee/</link>
      <pubDate>Sat, 02 Dec 2023 16:49:42 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/boneh_durfee/</guid>
      <description>The attack relies on the fact that if d is small, the prime factors p and q of the RSA modulus n must lie in a relatively narrow range that can be determined from d and n.&#xA;The steps of the Boneh-Durfee attack to factor RSA moduli when the private exponent d is small:&#xA;Estimate the number of bits k in the prime factors p and q of the RSA modulus n.</description>
    </item>
    <item>
      <title>Bleichenbacher</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/bleichenbacher/</link>
      <pubDate>Sat, 02 Dec 2023 16:49:27 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/bleichenbacher/</guid>
      <description>The attack exploits the way RSA ciphertext is formatted in PKCS#1 v1.5 padding. In this padding scheme, the plaintext is prefixed with random non-zero pad bytes before encrypting.&#xA;The steps are as follows:&#xA;The attacker sends manipulated ciphertexts to the target and observes the response to deduce information about the padding. The ciphertext is multiplied by a blinding factor and sent to the server. Based on whether the ciphertext is accepted or rejected, the possible interval for the plaintext is narrowed down.</description>
    </item>
    <item>
      <title>Introduction</title>
      <link>https://victim1307.github.io/cryptolearn/docs/rsa/introduction/</link>
      <pubDate>Sat, 02 Dec 2023 16:49:02 +0530</pubDate>
      <guid>https://victim1307.github.io/cryptolearn/docs/rsa/introduction/</guid>
      <description>RSA is a widely-used public-key encryption system that is based on the mathematical properties of large prime numbers. It was one of the first practical public-key cryptosystems and is widely used for secure data transmission.&#xA;The RSA encryption process consists of two parts: key generation and encryption/decryption.&#xA;Key Generation:&#xA;Select two large prime numbers, p and q. Compute n = p*q. n is used as the modulus for both the public and private keys.</description>
    </item>
  </channel>
</rss>
